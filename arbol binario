#include <iostream>
#include <stdlib.h>
#include <stdio.h>
#include <cctype>
#define _CRT_SECURE_NO_WARNINGS
using namespace std;

struct nodo{
int dato;
Nodo *padre;
Nodo *der;
Nodo *izq;
};

//metodos
void insertar(Nodo *&arbol, const int n, Nodo*padre);
void mostrar(Nodo *arbol, int espaciado);
void preOrder(Nodo *arbol);
void inOrder(Nodo *arbol);
void postOrder(Nodo *arbol);
bool esUnNumero(const char* cadena);
bool seguirIngresando();
char mainMenu();
int pedirNumero();
int main(){
  char op = '0';
  Nodo *arbol = NULL;
  do{
    system(cls);
    if(arbol){
      printf("\n Arbol ABB");
      mostrar(arbol, 0);
      printf("Fin del arbol ABB");
      }
      switch(op= mainMenu()){
        case '1': insertar(arbol, pedirNumero(),NULL); break;
        case '2': printf("\n Recorrido PreOrder\n"); preOrder(arbol); printf("Fin"); break;
        case '3': printf("\n Recorrido InOrder\n"); inOrder(arbol); printf("Fin"); break;
        case '4': printf("\n Recorrido PostOrder\n"); postOrder(arbol); printf("Fin"); break;
      }
    printf("\n");
    system("PAUSE");
  }while(op!='0');
    
  return 0;
}

char mainMenu(){
  char temp = '0';
  printf("Ejemplo");
  printf("Todo el menu Insertar, Leer PreOrder, InOrder, PostOrder");
scanf("%c",&temp);
return temp;
}

seguirIngresando(){
  prinf("");
  scanf("%c", &temp);
  do{
    switch (temp){
  case 'Y':
  return true;
  case 'N':
  return false;
      }
  }while(temo != 'Y' || != 'N');
}
bool esUnNumero(const char *cadena){
  for(; *cadena; ++cadena){
    if(!std:: isdigit(*cadena)) return false;
}
}
int pedirNumero(){
  char temp[255];
  do{
    printf("\n Ingresa numero: ");
    scanf("%s", temp);
  }while(!esUnNumero(temp));
return atoi(temp);
}

//metodo para insertar

void insertar(Nodo *&arbol, const int n, Nodo *padre){
  if(!arbol){
    Nodo *nuevo = (Nodo*)malloc(sizeof(Nodo));
  }
}
